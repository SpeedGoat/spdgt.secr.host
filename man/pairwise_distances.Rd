% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc_SMR.R
\name{pairwise_distances}
\alias{pairwise_distances}
\title{Calculate Pairwise Euclidean Distances Between Points}
\usage{
pairwise_distances(x, y = NULL)
}
\arguments{
\item{x}{Matrix, data frame, or vector. First set of coordinates. Must be a 2-column
matrix/data frame of coordinates, or a length-2 vector representing a single point.}

\item{y}{Matrix, data frame, or vector, or NULL. Optional second set of coordinates.
Must be a 2-column matrix/data frame, or a length-2 vector. If NULL,
distances are calculated between all pairs of points in x.}
}
\value{
Matrix of pairwise distances where:
\itemize{
\item Rows correspond to points in x
\item Columns correspond to points in y (or x if y is NULL)
\item Each element i,j is the Euclidean distance between point i in x and point j in y
}
}
\description{
Calculates the Euclidean distances between two sets of 2D points. When only one
set is provided, calculates distances between all pairs of points within that set.
}
\details{
The function performs the following operations:
\enumerate{
\item Input Validation:
\itemize{
\item Ensures x and y (if provided) contain 2D coordinates
\item Converts single points to 1-row matrices
}
\item Distance Calculation:
\itemize{
\item Uses Euclidean distance formula: sqrt((x₁-x₂)² + (y₁-y₂)²)
\item Efficiently computes all pairwise distances without loops
\item Returns result as a matrix
}
}

When y is NULL, the function produces a symmetric matrix of
distances between all pairs of points in x.
}
\examples{
\dontrun{
# Single point to multiple points
point <- c(0, 0)
points <- matrix(c(1,0, 0,1, 1,1), ncol=2, byrow=TRUE)
distances <- pairwise_distances(point, points)

# Multiple points to multiple points
points1 <- matrix(c(0,0, 1,0), ncol=2, byrow=TRUE)
points2 <- matrix(c(0,1, 1,1, 2,1), ncol=2, byrow=TRUE)
distances <- pairwise_distances(points1, points2)

# All pairwise distances within one set
points <- matrix(c(0,0, 1,0, 0,1, 1,1), ncol=2, byrow=TRUE)
distances <- pairwise_distances(points)
}
}
